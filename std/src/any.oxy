fn Any.from<From>(val: From) Any<From> {
	return new Any<From> {
		val: val,
	}
}

fn Any.cast <From, To> (from: From) To {
	return #asm(To, "
		mov rax, [rbp + 16]
		push rax
	")
}

fn Any.eq <Cmp> (self, other: Cmp) Bool {
	return Any.cast!<T, Int>(self.val) == Any.cast!<Cmp, Int>(other)
}

fn Any.str (self) Str {
	return Any.cast!<T, Int>(self.val).str()
}

fn Any.to<To>(self) To {
	return Any.cast!<T, To>(self.val)
}
