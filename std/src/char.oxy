def Char.== (self, other: Char) Bool {
	return #asm Bool "
		mov rax, qword [rbp + 16]
		cmp rax, qword [rbp + 24]
		sete al
		push rax
	"
}

def Char.!= (self, other: Char) Bool ->
	!(self == other)

def Char.Str (self) Str {
	return #asm Str "
		mov rdi, 16
		mov rsi, 1
		call _LibC.calloc

		mov rdi, qword [rbp + 16]
		mov qword [rax], rdi
		push rax
	"
}

def Char.is_digit (self) Bool {
	let as_int = self.Int()
	return as_int >= 48 && as_int <= 57
}

def Char.Int (self) Int ->
	Any.cast!<Char, Int>(self)

def Char.from_int (i: Int) Char ->
	Any.cast!<Int, Char>(i)
